.title Boot routines

.include consts.m11h

.asect
.globl echo

stack = 160000

.=1000
boot:
    mov #stack, sp      ; initialize the stack pointer
                        ; (needed because interrupt handlers use the stack)

    ;; XXX move this to kbd boot routine
    mov #input, @#kbv   ; install keyboard ISR
    mov #100, @#kbs     ; enable keyboard interrupts

    ;; boot motd prompt
    jsr r5, echo
    .word motd

    ;; shell prompt
    jsr r5, echo
    .word prompt

1$:
    wait                ; wait for interrupts
    br 1$

input:
    movb @#kbd, r1      ; read character
    movb r1, @#ttd      ; transmit data
wait$:
    tstb @#tts          ; wait until character transmitted
    bpl wait$

    cmp r1, #CR          ; prompt if this is a CR
    bne 2$

    jsr r5, echo
    .word prompt
2$:
    rti

motd:
    .asciz /Welcome to PDOSP-11/<CR><LF>

prompt:
    .ascii <LF>
    .asciz /C:\> /

.end
